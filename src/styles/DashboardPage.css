/* src/styles/DashboardPage.css */

/* Este √© o container '.parent' do seu exemplo.
  Ele define o layout principal do grid.
*/
.dashboard-grid-parent {
  display: grid;
  
  /* AJUSTE: Seu layout de 4 cards (div1 a div4) funciona melhor 
    com 4 colunas (repeat(4, 1fr)) em vez de 5.
  */
  grid-template-columns: repeat(4, 1fr);
  
  /* Definindo as linhas:
    1. 'auto' para o t√≠tulo.
    2. 'auto' para a linha de cards.
    3. '1fr' para a linha de gr√°ficos (ocupa o espa√ßo restante).
  */
  grid-template-rows: auto auto 1fr;
  grid-column-gap: 20px;
  grid-row-gap: 20px;
  
  /* !! IMPORTANTE !!
    Sua Navbar.css usa 'position: fixed'.
    Este padding-top (80px) √© ESSENCIAL para que o grid 
    comece *abaixo* da navbar e n√£o fique escondido atr√°s dela.
    (A navbar tem aprox. 60-70px de altura).
  */
  padding: 80px 20px 20px 20px; /* (top, right, bottom, left) */
  
  /* Garante que o dashboard ocupe no m√≠nimo a altura da tela */
  min-height: 100vh;
  box-sizing: border-box; /* Faz o padding ser inclu√≠do na altura total */
  background-color: #f0f2f5; /* Um fundo leve para o dashboard */
}

/* Estiliza√ß√£o base para todos os itens do grid
  (Cards e Gr√°ficos)
*/
.dashboard-item {
  background-color: #ffffff;
  padding: 20px;
  border-radius: 8px;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);
}

/* Define uma altura m√≠nima para os gr√°ficos,
  para que n√£o fiquem achatados se estiverem vazios.
*/
.dashboard-chart {
  min-height: 350px; 
  display: flex;
  align-items: center;
  justify-content: center;
}


/* --- Defini√ß√£o das √Åreas do Grid ---
*/

/* √Årea do T√≠tulo (Linha 1, Colunas 1 a 5) */
.dashboard-title-area {
  /* Come√ßa linha 1, col 1. Termina linha 2, col 5 (span 4 colunas) */
  grid-area: 1 / 1 / 2 / 5;
}

.dashboard-title-area h1 {
  font-size: 2.5em;
  color: #0f172a;
  margin: 0 0 5px 0;
}

.dashboard-title-area p {
  font-size: 1.1em;
  color: #334155;
  margin: 0;
}


/* LINHA DE CARDS (Linha 2) */
.div1 { grid-area: 2 / 1 / 3 / 2; }
.div2 { grid-area: 2 / 2 / 3 / 3; }
.div3 { grid-area: 2 / 3 / 3 / 4; }
.div4 { grid-area: 2 / 4 / 3 / 5; }

/* LINHA DE GR√ÅFICOS (Linha 3 em diante)
  
  NOTA: Usei 'div7' e 'div9' do seu CSS. 
  'div9' (3 / 3 / 6 / 5) faz mais sentido para um layout 
  balanceado do que 'div8' (3 / 3 / 4 / 4).
*/

/* Gr√°fico 1 (Esquerda) */
.div7 { 
  /* Come√ßa linha 3, col 1. Termina linha 6, col 3 (span 2 colunas) */
  grid-area: 3 / 1 / 6 / 3; 
}

/* Gr√°fico 2 (Direita) */
.div9 { 
  /* Come√ßa linha 3, col 3. Termina linha 6, col 5 (span 2 colunas) */
  grid-area: 3 / 3 / 6 / 5; 
}


/* --- üîπ RESPONSIVIDADE üîπ ---
*/

/* Telas M√©dias (Tablets)
  Breakpoint: 900px
  Layout: 2 colunas
*/
@media (max-width: 900px) {
  .dashboard-grid-parent {
    /* Muda para 2 colunas */
    grid-template-columns: repeat(2, 1fr);
    /* Define novas linhas: 1(title) + 2(cards) + 2(charts) */
    grid-template-rows: auto auto auto 1fr 1fr; 
  }

  /* --- √ÅREAS NO TABLET --- */
  .dashboard-title-area { grid-area: 1 / 1 / 2 / 3; } /* Span 2 */
  
  .div1 { grid-area: 2 / 1 / 3 / 2; }
  .div2 { grid-area: 2 / 2 / 3 / 3; }
  .div3 { grid-area: 3 / 1 / 4 / 2; }
  .div4 { grid-area: 3 / 2 / 4 / 3; }
  
  .div7 { grid-area: 4 / 1 / 5 / 3; } /* Span 2 */
  .div9 { grid-area: 5 / 1 / 6 / 3; } /* Span 2 */
}


/* Telas Pequenas (Celulares)
  Breakpoint: 768px (mesmo breakpoint da sua Navbar)
  Layout: 1 coluna (empilhado)
*/
@media (max-width: 768px) {
  .dashboard-grid-parent {
    /* Em telas muito pequenas, abandonar o grid e usar 
      'flex' √© mais simples e robusto para empilhar tudo.
    */
    display: flex;
    flex-direction: column;
    gap: 15px; /* Espa√ßamento entre os itens */
    
    /* Padding menor para mobile e mantendo o espa√ßo da navbar */
    padding: 70px 15px 15px 15px;
  }

  /* N√£o precisamos mais das 'grid-area', pois a ordem 
    do HTML agora dita a ordem de exibi√ß√£o.
  */

  .dashboard-title-area h1 {
    font-size: 2em;
  }
}